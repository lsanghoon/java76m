[주제: 네트워크 프로그래밍과 멀티 스레]
ex01 - Echo 클라이언트 / 서버 만들기

ex02 - 입/출력 스트림의 레퍼런스 관리

ex03 - Echo 서버 변경
  => 반복해서 
  => 클라이언트에서는 사용자로부터 입력 받아서 서버에 보내도록 변경한다
  => backlog: 대기열 크기
     대기열 크기만큼 클라이언트 연결을 보유할 수 있다.
     대기열을 초과하는 클라이언트 연결은 허용하지 않는다.
     클라이언트 입장에서는 내부의 기본 대기 시간(timeout)동안 연결을 시도하다가 
     계속 연결이 안되면 예외를 발생시킨다.
  => 반복문을 통해 순차적으로 클라이언트 요청을 처리한다.
     => 한 클라이언트 요청 처리가 끝날 때까지 다른 클라이언트들은 기다려야 한다.     
     => 동시에 클라이언트 요청을 처리하려면? 멀티 스레딩 기법을 도입하라!

ex04 - 스레드를 이용하여 클라이언트 요청을 동시에 처리하기
  => Thread를 상속 받은 MyThread 만들기
  
ex05 - 스레드를 이용하여 클라이언트 요청을 동시에 처리하기
  => Server
    - Runnable 인터페이스를 이용하여 클라이언트 요청 처리
    - 클라이언트가 bye를 입력하기 전까지 계속 연결된채로 요청을 처리한다.
  => Client
    - bye를 입력하기 전까지 계속 실행되도록 Client를 변경한다.
    
ex06

ex07

ex08 - 파일 전송 구현
  => 클라이언트 사용법
     > java -cp ./bin step16.ex08.client.FileClient c:/test/a.gif
                              /Users/isanghoon/test/a.gif
     전송완료!
     >
     
  => 서버 사용법
     > java -cp ./bin step16.ex08.server.FileServer c:/test2
     파일저장완료
     >
     
  => 실행 결과 확인
     - c:/test2 폴더에 가서 a.gif 이름을 갖는 파일이 있는지 확인하고,
       그림판이나 미리보기 등의 프로그램을 사용하여 그림 파일을 출력해 본다.
  