<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace: SQL문을 분류하는 용도로 사용하는 그룹명. 프로그래밍의 일관성을 위해서 가능한 DAO의 패키지명과 같게 
	하라! -->
<mapper namespace="java76.pms.dao.BoardDao">

	<!-- 컬럼 이름과 프로퍼티 이름이 다를 때, 연결 정보를 정의해두면 select할 때 편리하다. -->
	<resultMap type="java76.pms.domain.Board" id="boardMap">
		<!-- PK 컬럼은 가능한 <id> 태그로 정의한다. => 객체 풀에서 PK로 객체를 찾을 때 사용된다. -->
		<id column="bno" property="no" />
		<result column="cr_dt" property="createdDate" />
		<result column="pw" property="password" />
	</resultMap>

	<!-- SQL문은 <select>, <insert>, <update>, <delete> 엘리먼트에 작성한다. => id 속성: 
		SQL문을 찾을 때 사용할 아이디. 가능한 DAO의 메서드 이름과 같게 하라! => resultType 속성: select결과를 담을 
		값 객체 이름. fully qualified name. -->
	<select id="selectList" resultMap="boardMap">
		select bno, title, content, views, cr_dt, pw from board
	</select>

	<insert id="insert" parameterType="java76.pms.domain.Board">
		insert into board(title,content,cr_dt,pw)
		values(#{title},#{content},now(),#{password})
	</insert>

  <!-- primitive type인 경우 프로퍼티 이름은 아무거나 지정해도 된다. -->
	<delete id="delete" parameterType="int">
		delete from board where pno=#{value}
	</delete>
	
	<update id="update" parameterType="java76.pms.domain.Board">
	 update board set 
	   title=#{title},
	   content=#{content}, 
	   cr_dt=#{createdDate} 
	 where bno=#{no} and (pw is null or pw=#{password})
	</update>
</mapper>